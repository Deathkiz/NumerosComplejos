##Primer Punto
import numpy as np
import matplotlib.pyplot as plt

#Parametros
slit_distance = 0.0001  
wavelength = 500e-9     
screen_distance = 1.0   
screen_width = 0.05            
num_points = 1000       

screen_points = np.linspace(-screen_width/2, screen_width/2, num_points)

k = 2 * np.pi / wavelength
intensity = (np.cos(k * slit_distance * screen_points / (2 * screen_distance)) ** 2) * (np.sin(k * screen_points / screen_distance) ** 2)  # initialize intensity array
intensity_normalized = intensity / np.max(intensity)
plt.figure(figsize=(10, 6))
plt.plot(screen_points, intensity_normalized, label='Patrón de Interferencia', color='purple')
plt.xlabel('Posición en la Pantalla (m)')
plt.ylabel('Intensidad Normalizada')
plt.title('Simulación del Experimento de Doble Rendija: Patrón de Interferencia')
plt.legend()
plt.grid()
plt.xlim(-screen_width / 2, screen_width / 2)
plt.ylim(0, 1)
plt.show()
#---------------------------------
##Segundo Punto
import numpy as np
import matplotlib.pyplot as plt

# Parametros
slit_distance = 0.0001  
wavelength = 500e-9     
screen_distance = 1.0   
screen_width = 0.1     ###En este caso se cambia de 0.05 a 0.1 para poder diferenciar el patron de interferencia
num_points = 1000      

screen_points = np.linspace(-screen_width/2, screen_width/2, num_points)
intensity = (np.sin(k * slit_distance * screen_points / (2 * screen_distance)) ** 2) * (np.cos(k * screen_points / screen_distance) ** 2)
intensity_normalized = intensity / np.max(intensity)

plt.figure(figsize=(10, 6))
plt.bar(screen_points, intensity_normalized, width=0.0001, color='cyan', alpha=0.7)
plt.xlabel('Posición en la Pantalla (m)')
plt.ylabel('Intensidad Normalizada')
plt.title('Simulación Cuántica del Experimento de Doble Rendija: Patrón de Interferencia')
plt.grid()
plt.xlim(-screen_width / 2, screen_width / 2)
plt.ylim(0, 1)
plt.show()

#---------------------
##Tercer punto
import numpy as np
import matplotlib.pyplot as plt

# Parametros
slit_distance = 0.001  
wavelength = 500e-9    
screen_distance = 1.0  
screen_width = 0.1     
num_points = 1000      


screen_points = np.linspace(-screen_width / 2, screen_width / 2, num_points)
amplitude = np.zeros(num_points)

for slit in [-slit_distance / 2, slit_distance / 2]:
    distance = np.sqrt(screen_distance**2 + (screen_points - slit)**2)
    amplitude += np.cos(2 * np.pi * distance / wavelength)

intensity = amplitude**2

intensity_normalized = intensity / np.max(intensity)

plt.figure(figsize=(10, 6))
plt.bar(screen_points, intensity_normalized, width=0.0001, color='brown', alpha=0.7)
plt.xlabel('Posición en la Pantalla (m)')
plt.ylabel('Intensidad Normalizada')
plt.title('Simulación del Experimento de Doble Rendija: Interferencia de Ondas')
plt.grid()
plt.xlim(-screen_width / 2, screen_width / 2)
plt.ylim(0, 1)
plt.show()
